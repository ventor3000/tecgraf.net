using System;
using System.Runtime.InteropServices;
using System.Text;

// Autogenerated wrapper file
// Do not edit by hand!
// Generated Monday, 31 August 2015

namespace Tecgraf {
  internal class NativeIUP {

    const string libName="iup";

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupOpen(IntPtr argv,IntPtr argc);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupClose();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupMainLoop();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupLoopStep();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupLoopStepWait();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupMainLoopLevel();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupFlush();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupExitLoop();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupRecordInput([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string filename,int mode);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupPlayInput([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string filename);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupUpdate(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupUpdateChildren(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupRedraw(IntPtr ih,int children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupRefresh(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupRefreshChildren(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupHelp([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string url);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupLoad([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string filename);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupLoadBuffer([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string buffer);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupVersion();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupVersionDate();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupVersionNumber();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetLanguage([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string lng);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetLanguage();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetLanguageString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string name,IntPtr str);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupStoreLanguageString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string name,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string str);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetLanguageString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetLanguagePack(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupDestroy(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupDetach(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupAppend(IntPtr ih,IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupInsert(IntPtr ih,IntPtr ref_child,IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetChild(IntPtr ih,int pos);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetChildPos(IntPtr ih,IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetChildCount(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetNextChild(IntPtr ih,IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetBrother(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetParent(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetDialog(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetDialogChild(IntPtr ih,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupReparent(IntPtr ih,IntPtr new_parent,IntPtr ref_child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupPopup(IntPtr ih,int x,int y);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupShow(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupShowXY(IntPtr ih,int x,int y);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupHide(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupMap(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupUnmap(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupResetAttribute(IntPtr ih,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetAllAttributes(IntPtr ih,ref IntPtr names,int n);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSetAtt([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string handle_name,IntPtr ih,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string name,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSetAttributes(IntPtr ih,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string str);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetAttributes(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetAttribute(IntPtr ih,string name,IntPtr value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetStrAttribute(IntPtr ih,string name,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetStrf(IntPtr ih,string name,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string format,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetInt(IntPtr ih,string name,int value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetFloat(IntPtr ih,string name,float value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetRGB(IntPtr ih,string name,byte r,byte g,byte b);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetAttribute(IntPtr ih,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetInt(IntPtr ih,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetInt2(IntPtr ih,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetIntInt(IntPtr ih,string name,out int i1,out int i2);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern float IupGetFloat(IntPtr ih,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupGetRGB(IntPtr ih,string name,out byte r,out byte g,out byte b);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetAttributeId(IntPtr ih,string name,int id,IntPtr value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetStrAttributeId(IntPtr ih,string name,int id,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetStrfId(IntPtr ih,string name,int id,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string format,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetIntId(IntPtr ih,string name,int id,int value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetFloatId(IntPtr ih,string name,int id,float value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetRGBId(IntPtr ih,string name,int id,byte r,byte g,byte b);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetAttributeId(IntPtr ih,string name,int id);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetIntId(IntPtr ih,string name,int id);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern float IupGetFloatId(IntPtr ih,string name,int id);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupGetRGBId(IntPtr ih,string name,int id,out byte r,out byte g,out byte b);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetAttributeId2(IntPtr ih,string name,int lin,int col,IntPtr value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetStrAttributeId2(IntPtr ih,string name,int lin,int col,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetStrfId2(IntPtr ih,string name,int lin,int col,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string format,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetIntId2(IntPtr ih,string name,int lin,int col,int value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetFloatId2(IntPtr ih,string name,int lin,int col,float value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetRGBId2(IntPtr ih,string name,int lin,int col,byte r,byte g,byte b);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetAttributeId2(IntPtr ih,string name,int lin,int col);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetIntId2(IntPtr ih,string name,int lin,int col);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern float IupGetFloatId2(IntPtr ih,string name,int lin,int col);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupGetRGBId2(IntPtr ih,string name,int lin,int col,out byte r,out byte g,out byte b);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetGlobal(string name,IntPtr value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetStrGlobal(string name,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetGlobal(string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSetFocus(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetFocus();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupPreviousField(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupNextField(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetCallback(IntPtr ih,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSetCallback(IntPtr ih,string name,IntPtr func);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSetCallbacks(IntPtr ih,string name,IntPtr func,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern CBDefault IupGetFunction(string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern CBDefault IupSetFunction(string name,IntPtr func);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetHandle(string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSetHandle(string name,IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetAllNames(ref IntPtr names,int n);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetAllDialogs(ref IntPtr names,int n);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetName(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetAttributeHandle(IntPtr ih,string name,IntPtr ih_named);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetAttributeHandle(IntPtr ih,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetClassName(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGetClassType(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetAllClasses(ref IntPtr names,int n);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetClassAttributes(string classname,ref IntPtr names,int n);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetClassCallbacks(string classname,ref IntPtr names,int n);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSaveClassAttributes(IntPtr ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupCopyClassAttributes(IntPtr src_ih,IntPtr dst_ih);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupSetClassDefaultAttribute(string classname,string name,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string value);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupClassMatch(IntPtr ih,string classname);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupCreate(string classname);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupCreatev(string classname,ref IntPtr param);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupCreatep(string classname,IntPtr first,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupFill();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupRadio(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupVbox(IntPtr child,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupVboxv(IntPtr[] children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupZbox(IntPtr child,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupZboxv(IntPtr[] children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupHbox(IntPtr child,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupHboxv(IntPtr[] children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupNormalizer(IntPtr ih_first,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupNormalizerv(IntPtr[] ih_list);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupCbox(IntPtr child,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupCboxv(IntPtr[] children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSbox(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSplit(IntPtr child1,IntPtr child2);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupScrollBox(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGridBox(IntPtr child,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupGridBoxv(IntPtr[] children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupExpander(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupDetachBox(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupBackgroundBox(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupFrame(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupImage(int width,int height,byte[] pixmap);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupImageRGB(int width,int height,byte[] pixmap);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupImageRGBA(int width,int height,byte[] pixmap);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupItem([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,string action);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSubmenu([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupSeparator();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupMenu(IntPtr child,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupMenuv(IntPtr[] children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupButton([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,string action);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupCanvas(string action);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupDialog(IntPtr child);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupUser();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupLabel([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupList(string action);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupText(string action);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupMultiLine(string action);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupToggle([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,string action);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupTimer();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupClipboard();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupProgressBar();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupVal(string type);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupTabs(IntPtr child,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupTabsv(IntPtr[] children);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupTree();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupLink([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string url,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupSaveImageAsText(IntPtr ih,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string file_name,string format,string name);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupTextConvertLinColToPos(IntPtr ih,int lin,int col,out int pos);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupTextConvertPosToLinCol(IntPtr ih,int pos,out int lin,out int col);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupConvertXYToPos(IntPtr ih,int x,int y);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupTreeSetUserId(IntPtr ih,int id,IntPtr userid);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupTreeGetUserId(IntPtr ih,int id);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupTreeGetId(IntPtr ih,IntPtr userid);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupTreeSetAttributeHandle(IntPtr ih,string name,int id,IntPtr ih_named);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupFileDlg();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupMessageDlg();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupColorDlg();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupFontDlg();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupProgressDlg();

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetFile(StringBuilder arq);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupMessage([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string msg);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern void IupMessagef([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string format,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupAlarm([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string msg,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string b1,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string b2,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string b3);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupScanf([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string format,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupListDialog(int type,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,int size,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string[] list,int op,int max_col,int max_lin,int[] marks);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetText([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,IntPtr text);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetColor(int x,int y,ref byte r,ref byte g,ref byte b);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetParam([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,IntPtr action,IntPtr user_data,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string format,__arglist);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern int IupGetParamv([MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string title,IntPtr action,IntPtr user_data,[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(UTF8Marshaler))] string format,int param_count,int param_extra,IntPtr param_data);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupLayoutDialog(IntPtr dialog);

    [DllImport(libName,CallingConvention=CallingConvention.Cdecl)]
    internal static extern IntPtr IupElementPropertiesDialog(IntPtr elem);

  }
}
